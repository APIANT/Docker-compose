version: "2.1"
services:
  db:
    image: quay.io/apiant/apiant-db:SYSTEM_VERSION
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 180s
      retries: 5
    environment:
      # You can use a different value if desired
      - MYSQL_ROOT_PASSWORD=root123
      
      # You can use a different value if desired
      # Must match the value in APIANT_MYSQL_USER below
      - MYSQL_USER=apiant
      
      # You can use a different value if desired
      # Must match the value in APIANT_MYSQL_PASS below
      - MYSQL_PASSWORD=apiant123
      
      # "APIANT" is recommended as the database name
      # Must match the value in APIANT_MYSQL_DATABASE below
      - MYSQL_DATABASE=APIANT
    volumes:
      - /home/data/apiant/mysql:/var/lib/mysql
      
  webapp:
    image: quay.io/apiant/apiant-webapp:SYSTEM_VERSION
    healthcheck:
      test: ["CMD", "curl" ,"-f", "localhost:8080"]
    depends_on:
      db:
        condition: service_healthy
    environment:
    
      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables define Tomcat settings
      # ----------------------------------------------------------------------------------------------------------------------
          # The minimum amount of Tomcat heap space
          # Recommend setting this to half of the TOMCAT_HEAP_MAX
          - TOMCAT_HEAP_MIN=2G

          # The maximum amount of Tomcat heap space
          # 4G is a bare minimum just suitable for demo systems
          # Production systems typically need 16G or more, depending on automation processing
          - TOMCAT_HEAP_MAX=4G
    
      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables define the database connection, typically to the database instance defined above
      # ----------------------------------------------------------------------------------------------------------------------
          # Don't change this
          - APIANT_MYSQL_HOST=db
          
          # You can use a different value if desired
          # Must match the value in MYSQL_USER above
          - APIANT_MYSQL_USER=apiant
          
          # You can use a different value if desired
          # Must match the value in MYSQL_PASSWORD above
          - APIANT_MYSQL_PASS=apiant123
          
          # You can use a different value if desired
          # Must match the value in MYSQL_DATABASE above
          - APIANT_MYSQL_DATABASE=APIANT
          
          # Adjust based on the available server memory, minus what is configured for Tomcat.
          # On a 16GB server, generally allocate 14GB for Tomcat and 1GB to 1.5GB for MySQL
          # The minimum allowed value is 134217728, lower values will have no effect
          - APIANT_MYSQL_INNODB_BUFFER_POOL_SIZE_BYTES=512000000          
      # ----------------------------------------------------------------------------------------------------------------------
      
      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables are required system settings that must be provided by you
      # The system will not operate without these
      # ----------------------------------------------------------------------------------------------------------------------
          # The license key you have been provided.
          # Either a license key or an evaluation license key is required.
          - APIANT_LICENSE=
          
          # An evaluation license key, if you have been provided one.
          # Either a license key or an evaluation license key is required.
          - APIANT_EVALUATION=
          
          # The IP address of the server
          - APIANT_IP_ADDRESS=
          
          # The domain and optional port to reach the server.  Must include http:// or https:// e.g. https://mydomain.com
          # The default of http://localhost is only suitable when running the system on the same machine as the browser, e.g. your laptop
          - APIANT_DOMAIN=http://localhost
          # If not using the included HAProxy w/ SSL, comment out the above line and uncomment the following line
          # Port 8080 is the Tomcat port exposed towards the bottom of this file
          #- APIANT_DOMAIN=http://localhost:8080
      # ----------------------------------------------------------------------------------------------------------------------

      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables are for outbound email delivery.
      # If no outbound email delivery mechanism is configured, the system will use bare Java Email API's, which typically
      # results in emails ending up in spam due to no DKIM/SPF signing, depending on if the destination domain matches the
      # the system's domain or not.
      # ----------------------------------------------------------------------------------------------------------------------
          # The "from" email address for outbound system emails  
          - APIANT_SMTP_SYSTEM_FROM_ADDRESS=
          # The sender name for outbound system emails
          - APIANT_SMTP_SYSTEM_FROM_NAME=
          
          # Configure for typical SMTP servers
          # Enter the server address for outbound SMTP
          - APIANT_SMTP_STANDARD_HOST=
          # Enter the SMTP port number, the default is 25
          - APIANT_SMTP_STANDARD_PORT=
          # Enter true to connect to the SMTP server using SSL.  The default is false
          - APIANT_SMTP_STANDARD_IS_SSL=
          # optional, enter if the SMTP server requires authentication
          - APIANT_SMTP_STANDARD_USERNAME=
          # optional, enter if the SMTP server requires authentication
          - APIANT_SMTP_STANDARD_PASSWORD=
          
          # Configure to use Amazon SES for outbound email
          # If an Access Key is entered, Amazon Simple E-mail Service is used instead of any configured SMTP server
          - APIANT_SMTP_AMAZON_SES_ACCESS_KEY=
          - APIANT_SMTP_AMAZON_SES_SECRET_KEY=
          # optional, leave empty for default or use this format: email.us-west-2.amazonaws.com
          - APIANT_SMTP_AMAZON_SES_HOST
          
          # Configure to use ElasticEmail.com for outbound email
          # If an API Key is entered, elasticemail.com is used instead of any configured SMTP server 
          - APIANT_SMTP_ELASTICEMAIL_ACCOUNT=
          - APIANT_SMTP_ELASTICEMAIL_API_KEY=
             
          # The sys admin's name
          - APIANT_ADMIN_NAME=
          
          # The sys admin's e-mail address.  Will receive system alert emails.
          - APIANT_ADMIN_EMAIL=          
      # ----------------------------------------------------------------------------------------------------------------------
      
      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables are settings that will vary based upon the amount of available server RAM
      # ----------------------------------------------------------------------------------------------------------------------
          # The server will execute automations, batch jobs, and web services in separate threads
          # These settings control the maximum number of threads by item type
          # If all threads of a particular type are busy, new work items are queued until free threads become available
          # Generally, the sum of all the configured max threads should not be much more than the number of CPU cores
          - APIANT_NATIVE_WORK_QUEUE_MAX_BATCH_JOB_EXEC_THREADS=10
          - APIANT_NATIVE_WORK_QUEUE_MAX_POLLING_AUTOMATION_EXEC_THREADS=10
          - APIANT_NATIVE_WORK_QUEUE_MAX_WEBHOOK_AUTOMATION_EXEC_THREADS=10
          - APIANT_NATIVE_WORK_QUEUE_MAX_WEB_SERVICE_EXEC_THREADS=10
          
          # The max number of failed transactions to be placed into the auto-retry work queue
          - APIANT_NATIVE_WORK_QUEUE_MAX_QUEUED_RETRIES=250
      
          # The minimum amount of free memory needed before an automation will be executed, -1 for infinite
          - APIANT_MIN_FREE_MEMORY_MB=250
          
          # The system admin will receive an email alert if the free Tomcat memory dips below this threshold
          # Only a single alert email is sent, until the system is rebooted
          # Use TOMCAT_HEAP_MAX above to allocate more memory to Tomcat
          # Enter zero to disable
          - APIANT_MIN_FREE_MEMORY_ALERT_MB=250
      # ----------------------------------------------------------------------------------------------------------------------
      
      # ----------------------------------------------------------------------------------------------------------------------
      # This section of environment variables are either optional or have sensible default values
      # ----------------------------------------------------------------------------------------------------------------------
          # This is the tomcat context to append to the APIANT_DOMAIN URL, e.g. https://localhost:8080/context
          # If no Tomcat context path is configured, leave this empty
          - APIANT_CONTEXT=
          
          # If running on a LAN that uses a proxy server to access the Internet
          - APIANT_PROXY_HOST=
          # The port is required if a host is specified
          - APIANT_PROXY_PORT=
          - APIANT_PROXY_USERNAME=
          - APIANT_PROXY_PASSWORD=
          
          # If true, the browser will use Tomcat ports 8080 or 8443 for websocket connections
          # If false, no Tomcat port number will be specified in the URL
          - APIANT_DO_WEBSOCKETS_CONNECT_TO_TOMCAT=false
          
          # True enables debug output into tomcat.log
          - APIANT_LOGGING_IS_DEBUG_OUTPUT_ENABLED=false
          
          # The maximum amount of data logged into any single automation or batch job log file
          # Ignored if APIANT_IS_WRITING_LOGS_TO_STDOUT is true 
          - APIANT_LOGGING_MAX_LOGFILE_SIZE_MB=250
          
          # Configure to store generated automation & batch job logs in Amazon S3
          # Ignored if APIANT_IS_WRITING_LOGS_TO_STDOUT is true 
          - APIANT_AMAZON_S3_ACCESS_KEY=
          - APIANT_AMAZON_S3_SECRET_KEY=
          # S3 Region, e.g. us-west-2
          - APIANT_AMAZON_S3_REGION=
          - APIANT_AMAZON_S3_BUCKET=
          
          # The maximum number of concurrent HTTP connections
          - APIANT_MAX_HTTP_CONNECTIONS=500
          
          # The maximum amount of data in MB that can be loaded from HTTP responses, -1 for infinite
          - APIANT_MAX_HTTP_DATA_MB=100
          
          # If this is a Development Server, enter one or more production server URL's, e.g. https://mydomain.com
          # Separate multiple URLS with a pipe "|"
          - APIANT_PRODUCTION_SERVER_URLS=
          
          # The number of seconds to wait for a socket response before timing out, zero for infinite
          - APIANT_SOCKET_TIMEOUT_SECONDS=3600
          
          # If true, new accounts can be created
          # Ignored if SSO (Single Sign-On) is enabled
          - APIANT_NEW_ACCOUNT_CREATION_IS_NEW_ACCOUNT_CREATION_ALLOWED=true
          
          # Set this to false to not allow users to register new accounts using public
          # e-mail addresses from public e-mail providers like Gmail, Hotmail, MSN, Yahoo, or AOL that
          # don't authenticate user names
          # Ignored if SSO (Single Sign-On) is enabled
          - APIANT_NEW_ACCOUNT_CREATION_IS_PUBLIC_REGISTRATION_EMAIL_ADDRESS_ALLOWED=true
          
          # If true, the system will generate the initial password for new accounts.  If false, end users can choose their own password
          # Ignored if SSO (Single Sign-On) is enabled
          - APIANT_NEW_ACCOUNT_CREATION_IS_INITIAL_PASSWORD_SYSTEM_GENERATED=false
          
          # Set to -1 for no throttle
          - APIANT_MAX_NEW_ACCOUNTS_PER_MINUTE=-1
          
          # The cron schedule to prune the database of data flagged for deletion
          - APIANT_CRON_PRUNE_DATABASE=0 3 * * *
          
          # The number of days to retain deleted content in the database, -1 for no limit
          - APIANT_PRUNE_DATABASE_DELETED_CONTENT_AFTER_DAYS=-1
          
          # The cron schedule to prune the schedulers of stale automations and batch jobs
          - APIANT_CRON_PRUNE_SCHEDULERS=0 4 * * *
          
          # The system is continously generating tomcat temp files when JSP's are compiled that need to be pruned
          - APIANT_CRON_PURGE_TEMP_JSP_FILES=1 5 * * *
          
          # The cron schedule to retry unprocessed webhooks
          - APIANT_CRON_RETRY_UNPROCESSED_WEBHOOKS=30 * * * *
          
          # The cron schedule to delete unused webhooks (due to abandoning automation creation, or when automations are deleted) from remote API's
          - APIANT_CRON_PURGE_DANGLING_WEBHOOKS=30 * * * *
          
          # The cron schedule to refresh cached data feeds
          - APIANT_CRON_REFRESH_CACHED_FEEDS=*/5 * * * *
          
          # The number of seconds any single module can take to process before the automation engine times out, zero for infinite
          - APIANT_MODULE_TIMEOUT_SECONDS=0
          
          # The number of seconds any server assembly can take to process before it times out, zero for infinite
          - APIANT_SERVER_ASSEMBLY_TIMEOUT_SECONDS=300
          
          # The number of seconds any automation can take to process before it times out, zero for infinite
          - APIANT_AUTOMATION_TIMEOUT_SECONDS=600
          
          # The number of seconds any JSP can take to process before it times out, zero for infinite
          - APIANT_JSP_TIMEOUT_SECONDS=600
          
          # The number of days to retain temporary files generated by assemblies on the filesystem, -1 for no limit
          # Some automations use temp files in their processing, e.g. the PDF app creates generated PDFs as temp files
          # The ability for automations to retry failed transactions can depend on the availability of temp files
          - APIANT_MAX_TEMP_FILE_AGE_DAYS=90
      
          # If true, automation and batch job logs are only written to stdout
          # Error messages are written to stderr, but retain their email alerts
          # If APIANT_MAX_AUTOMATION_LOG_AGE_DAYS is -1 then no automation logging info is written to stdout regardless of this setting
          # If APIANT_MAX_BATCH_JOB_LOG_AGE_DAYS is -1 then no batch job logging info is written to stdout regardless of this setting
          - APIANT_IS_WRITING_LOGS_TO_STDOUT=false
      
          # The maximum age of automation logs to keep when APIANT_IS_WRITING_LOGS_TO_STDOUT is false 
          # Set to zero for no maximum, logs will be retained forever
          # Set to -1 to turn off all automation logging.  Also causes the system to not store any processed data, including transaction history.
          - APIANT_MAX_AUTOMATION_LOG_AGE_DAYS=90
          
          # The maximum age of batch job logs to keep when APIANT_IS_WRITING_LOGS_TO_STDOUT is false
          # Set to zero for no maximum, logs will be retained forever
          # Set to -1 to turn off all automation logging
          - APIANT_MAX_BATCH_JOB_LOG_AGE_DAYS=90
          
          # A single message queue is used to receive all inbound webhooks as soon as they are received
          # Then these messages are read off this single queue and routed to individual queues for automations
          # Each automation has its own message queue
          # This setting controls how many routing threads are used to route webhooks from the received queue to the automation queues
          - APIANT_ACTIVEMQ_MAX_ROUTING_THREADS=25
          
          # A single message queue is used to receive all inbound webhooks as soon as they are received
          # Then these messages are read off this single queue and routed to individual queues for automations
          # Each automation has its own message queue
          # This setting controls how many routing threads are used to route webhooks from the received queue to the automation queues
          - APIANT_HAZELCAST_MAX_ROUTING_THREADS=25
          
          # Automations store automation history into Lucene for full-text searchability
          # Writing data into Lucene is very I/O intensive.  
          # This setting controls how many threads are used to write automation history data into Lucene
          - APIANT_MAX_LUCENE_WRITER_THREADS=10
          
          # If true, end users can sign into the system using popular OAuth social apps
          # Ignored if SSO (Single Sign-On) is enabled
          - APIANT_SIGNIN_WITH_OAUTH_OPTIONS_IS_ENABLED=false
          # If true, Facebook OAuth API keys must be loaded into the system
          - APIANT_SIGNIN_WITH_OAUTH_OPTIONS_HAS_FACEBOOK=false
          # If true, Google OAuth API keys must be loaded into the system
          - APIANT_SIGNIN_WITH_OAUTH_OPTIONS_HAS_GOOGLE=false
          # If true, Twitter OAuth API keys must be loaded into the system
          - APIANT_SIGNIN_WITH_OAUTH_OPTIONS_HAS_TWITTER=false
          
          # The system can send the results of API invocations to a Splunk HTTP Event Collector for dashboarding and alerting
          # The URL of the HTTP Event Collector to invoke
          # General form = http(s)://domain:port/services/collector
          - APIANT_SPLUNK_URL=

          # The HTTP Event Collector token to use
          - APIANT_SPLUNK_TOKEN=

          # The system supports Single Sign-On (SSO) using either a Central Authentication Service (CAS) or SAML
          # Only one can be enabled
          - APIANT_SSO_CAS_IS_ENABLED=false
          
          # Set to the URL of the CAS server
          # Required if CAS is enabled
          - APIANT_SSO_CAS_URL=

          # The system supports Single Sign-On (SSO) using either a Central Authentication Service (CAS) or SAML
          # Only one can be enabled
          - APIANT_SSO_SAML_IS_ENABLED=false
          
          # The the X509 certificate for the APIANT service provider
          # Optional.  If a value is provided, APIANT will sign requests made to the Identity Provider (IdP)
          # Enter on a single line, remove all line breaks
          - APIANT_SSO_SAML_SP_X509_CERT=
          
          # The the private key for the APIANT service provider
          # Optional.  If a value is provided, APIANT will sign requests made to the Identity Provider (IdP)
          # Enter on a single line, remove all line breaks
          - APIANT_SSO_SAML_SP_PRIVATE_KEY=
          
          # The Entity ID of the SAML Identity Provider 
          # Required if SAML is enabled
          - APIANT_SSO_SAML_IDP_ENTITY_ID=
          
          # The the Single Sign-On (SSO) URL for the SAML Identity Provider (IdP) 
          # Required if SAML is enabled
          - APIANT_SSO_SAML_IDP_SSO_URL=
          
          # The the Single Logout (SLO) URL for the SAML Identity Provider (IdP)
          # Optional.  If not provided, no SLO will be performed
          - APIANT_SSO_SAML_IDP_SLO_URL=
          
          # The the X509 certificate for the SAML Identity Provider (IdP)
          # Required if SAML is enabled.  Enter on a single line, remove all line breaks
          - APIANT_SSO_SAML_IDP_X509_CERT=
          
          # The name of the attribute that contains the user's first name from the SAML Identity Provider (IdP)
          # Optional
          - APIANT_SSO_SAML_IDP_ATTR_FIRST_NAME=User.FirstName
          
          # The name of the attribute that contains the user's last name from the SAML Identity Provider (IdP)
          # Optional
          - APIANT_SSO_SAML_IDP_ATTR_LAST_NAME=User.LastName
          
          # The name of the attribute that contains the user's email from the SAML Identity Provider (IdP)
          # Optional
          - APIANT_SSO_SAML_IDP_ATTR_EMAIL=User.email
          
          # If true, visitors can browse around the automation editor, but not create automations.  If false, the automation editor can only be accessed by signing in first
          # Ignored if SSO (Single Sign-On) is enabled
          - APIANT_IS_ANONYMOUS_AUTOMATION_EDITOR_ACCESS_ALLOWED=true
          
          # The number of days to wait after an account is closed before purging it from the database (and all associated data related to the account)
          # Enter -1 to disable purging
          - APIANT_PURGE_CLOSED_ACCOUNTS_AFTER_DAYS=-1
          
          # If true, the editor web pages won't display the .html extension in the browser URL
          - APIANT_IS_REMOVING_HTML_EXTENSION=false
          
          # If the error message returned by an automation's action when processing a trigger data row contains the specified text, the
          # trigger data row will be retried up to 3 times in 5, 10, and 15 minute intervals.
          # If the automation error message contains the text (case insensitive), it is considered a match.
          # Separate errors with a pipe "|"
          # The baseline system's config file contains all the entries below by default
          # To disable retries and remove the default values, you must enter a single value that is junk and won't match any error
          - APIANT_RETRYABLE_AUTOMATION_ERRORS=Bad Gateway|Communications link failure|Connection has been closed|Connection is closed|Connection reset|Internal Server Error|Problems while creating connection to|Received error 5|Remote host closed connection during handshake|SSL peer shut down incorrectly|Timed out
          
          # By default if an automation receives a 401 unauthorized error the automation is turned off and alert emails are sent.
          # Some API's return an 401 error code for errors other than the credentials being unauthorized.
          # If the automation error message contains the text (case insensitive), it is considered a match and a 401 will not cause the automation to be turned off.
          # Separate matches with a pipe "|"
          # The baseline system's config file contains all the matches below by default
          # To disable 401 processing and remove the default matches, you must enter a single value that is junk and won't match any API's domain
          - APIANT_IGNORE_AUTOMATION_401=api.tumblr.com|pcrecruiter.net|app.asana.com|api.mindbodyonline.com|api.reply.io|google.com|googleapis.com|zohoapis.com|api.netsuite.com
      
          # If true, the admin will receive an email whenever a user signs into the system
          - APIANT_ADMIN_IS_EMAILED_ON_ALL_LOGINS=false
      # ----------------------------------------------------------------------------------------------------------------------
      
    links:
      - db
     # If not using HAProxy, APIANT_DOMAIN above must match the port exposed for Tomcat.
     # If port 80 is exposed for Tomcat, APIANT_DOMAIN should not contain the port number.
     # Uncomment the next 2 lines if not using the included HAProxy    
#    ports:
#      - "8080:8080"
    expose:
        - 8080
    volumes:
      - /home/data/apiant/appActiveMQ:/usr/local/tomcat/webapps/apiant/appActiveMQ
      - /home/data/apiant/appHazelcast:/usr/local/tomcat/webapps/apiant/appHazelcast
      - /home/data/apiant/appLogs:/usr/local/tomcat/webapps/apiant/appLogs
      - /home/data/apiant/appModules:/usr/local/tomcat/webapps/apiant/appLucene
      - /home/data/apiant/appModules:/usr/local/tomcat/webapps/apiant/appModules
      - /home/data/apiant/appResources:/usr/local/tomcat/webapps/apiant/appResources
      - /home/data/apiant/build:/usr/local/tomcat/webapps/apiant/build
      - /home/data/apiant/WEB-INF/classes/appModules:/usr/local/tomcat/webapps/apiant/WEB-INF/classes/appModules
  # HAProxy is optional.  It is included in order to support SSL.  Comment out or remove the next section if desired.   
  haproxy:
    image: quay.io/apiant/apiant-haproxy:SYSTEM_VERSION
    depends_on:
      webapp:
        condition: service_healthy
    ports:
     # APIANT_DOMAIN above must match the port exposed for HAProxy.
     # If port 80 and 443 are exposed for HAProxy, APIANT_DOMAIN should not contain the port number.
      - "80:80"
      - "443:443"
    volumes:
      # Place a .pem file in /home/data/apiant/haproxy_ssl_certs before starting the container
      # The .pem must contain the private key, SSL cert, and any needed chain entries
      # e.g. on Unix: cat ssl.key ssl.cert ssl.ca > ssl.pem
      - /home/data/apiant/haproxy_ssl_certs:/haproxy_ssl_certs