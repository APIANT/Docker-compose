This is primarily a phase 2 release to utilize the two newly added columns in the keyvalue database table for denormalization.  Also, all database SQL that interacts with the keyvalue table has been optimized by ensuring indexes are utilized, resulting in the best possible performance for keyvalue table operations.

1. When action modules iterate through input data due to having the "iterate action assembly for input array data" option enabled, the automation logs now include entries for the current iteration number and the total number of iterations being performed.

2. Fixed a stack overflow that would halt an automation that contained an action having the "iterate action assembly for input array data" option enabled, where the number of iterations would cause the Java stack to be exhausted.  When this occurred, the halted automation would remain in the work queue, preventing further processing until the work queue was restarted.

3. The performance of resetting automations via the gear menu icon menu option in the automation editor's dashboard is greatly improved, as a result of the keyvalue database table changes.  A test polling automation that had nearly 100,000 stored item identifiers previously took 4.5 minutes to reset.  Now it takes a few seconds.

4. The performance of the Manage Stored Data screen in the automation editor is greatly improved, as a result of the keyvalue database table changes.  A test automation with nearly 100,000 entries would take around a minute to load a page of data rows.  Now it takes less than a second.

5. The performance of the Two-Way Sync Mappings screen in the automation editor is greatly improved, as a result of the keyvalue database table changes.  The screen could previously take over a minute to return a page of data rows.  Now it takes around a second.

6. If a JSON string is stored in the Simple DB as a value, the Simple DB Select module will now emit the value as a JSON string instead of a JSON object when running in the assembly editor.

7. When a trigger or action assembly is executed on the server via the "execute this assembly on the server" option under the Developer menu in the assembly editor, the system now uses a temporary automation uuid that matches what is used when running triggers and action in the assembly editor.  This is primarily so "automation scope" can be tested in the Simple DB modules.

8. In the automation builder, newly added triggers and actions with settings now have their "Don't show settings when deployed" option checked by default.

9. In the automation editor's lowest-level graphical automation history view, the background color of the Settings tab is now lighter so disabled settings controls are more visible.  Also, the background color of the Log tab is now white to match the color of the log text display area.

10. In the automation editor's lowest-level graphical automation history view, the Criteria-Result popover that appears when mousing over conditionals is now wider and taller, with the Criteria and Result displayed side-by-side so more information can be viewed, especially for conditionals within loops that perform many iterations.

11. In the Admin Console, any changes made on the Subscription Plans screen now result in the Save and Activate button flashing until the button is clicked and the changes are saved.

12. When editing action, trigger, or subassembly diagrams in the assembly editor, if the associate app has multiple connected accounts a dropdown pick list now appears at the bottom of the editor to the left of the Quick Picks area.  Selecting an account from the dropdown will cause the editor to use the selected account when the diagram is executed.  If accounts are added/removed in the automation editor, deselect and reselect the diagram's tab to refresh the account list.

13. If a sub-module nested with a Loop module is configured with a data path that is not a sub-path of the configured looped data row path, the server-side implementation no longer hits a runtime error.  Instead, the module now logs a notification into the debug log and uses an empty value.

14. The automation editor's dashboard and connection screens are now scrollable on touch devices.

15. A new right-click menu option has been added in the automation editor's dashboard to access account-level data stored in the system's database.  The new screen is the same as the Manage Stored Data screen for automations, but it only shows data stored in the system's database at the account level.  The same permissions are needed as for the Manage Stored Data screen to access the new screen: assembly developer, switch account, or automation debug log permissions.

16. After an action is copied from one automation and pasted into a different automation, the action's output fields are now mappable in downstream actions.  Previously "null" would appear, indicating an invalid mapping reference.

17. When automations are deployed, the on/off status of each deployed automation is now listed.  This is useful when re-deploying automations to accounts that already have the automations, where the system may have to turn off running automations based on the deployed changes, where turning on the automations provides the ability to configure the modifications.

18. Greatly improved the performance of turning automations on and off in the dashboard.  Performance was poor when thousands of automations were in the system.

19. The "turn all on" and "turn all off" buttons have been removed from the automation editor's dashboard due to issues caused when turning on multiple deployed automations at once.