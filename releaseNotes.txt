1. Fixed an issue in the automation editor where edited triggers and actions were not showing the dropdown list of all connected accounts.

2. Fixed scrollbar scrolling in browsers running on Windows.

3. The system uses a second ActiveMQ queue for processing inbound webhooks, in order to avoid a flood of webhooks from possibly exhausting memory.

4. The automation history 2nd-level screen now shows filtered data rows, for data rows filtered after the system is upgraded with this release.

5. The writing of automation history into Lucene has been optimized by caching the data and writing it into Lucene as a single batch.  This greatly reduces the load on Hazelcast, so the Admin Console's Hazelcast Stats page has now been removed.

6. When the top-level automation history filter is set to a value other than "All", clicking on a history card now causes the second-level filter to always reset to "All" instead of using the filter value from the top-level.  This is because people were confused by apparently "missing" data, especially when failed transactions were later successfully retried.

7. The Admin Console's Native Work Queue screen has been renamed to Work Queue.  (Earlier there was a thought that an external 3rd-party task executor may be used in the system.  That is no longer being considered.)

8. The Admin Console's left-side navigation menu has been re-ordered so the most frequently used screens are listed first.

9. The Admin Console's Work Queue screen's "Lock/Unlock Work Queue" button now always reflects the current state of the queue.  Also, a "Queue Locked" banner now appears when the queue is locked.

10. The Admin Console's Work Queue screen's now remain vertically centered.

11. The Admin Console has a new screen that shows unprocessed webhooks.  These are webhook payloads that have been received by the system but not yet processed by automations.

12. The top-level automation history screen cards now show messages and a spinning logo when automations are either queued for processing or when processing.  The cards can also not be clicked when in these states, to avoid drilling down into an empty screen.

13. When halting an automation's execution from the automation history screens, the UI now prompts to confirm the action, mainly since the button is now close to other controls.

14. When halting an automation's execution from the automation history screens, the transaction is now flagged with a "Processing interrupted" error, in order that the transaction can later be retried via the Retry button.

15. The 2nd-level automation history screen is now paginated via infinite scrolling rather than loading all available data rows at once, for performance.

16. The Admin Console's Work Queue screen now has a button to toggle the view between work items being processed and work items queued in memory waiting to be processed.

17. In the automation editor, trigger filters now have a checkbox that can turn off the logging of filtered data rows into automation history.  This is mainly for triggers that filter out lots of data rows, which can fill up automation history and degrade its performance and usability.

18. The performance of loading automation history has been greatly improved for large amounts of stored history data.

19. The system now supports automations that contain both polling triggers and webhook (instant) triggers.

20. Fixed an issue where compiling dynamic module libraries in the Admin Console's Compilation screen would not update their saved timestamps, causing the same libraries to be recompiled over and over each time dynamic modules were recompiled.

21. ActiveMQ is now configured in a manner that allows all incoming webhooks an equal chance to be processed.  Previously, if one automation was receiving a flood of webhooks that would cause ActiveMQ to not allow other automations a chance to process their incoming webhooks.

22. The system now emits a task_prune.log in the Tomcat logs directory that contains entries related to the pruning of the system's database and log files.

23. Automation and batch job logs are now stored in directories named after the automation id or batchjob id, rather than their uuids.